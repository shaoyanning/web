<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.0.xsd">
	<!-- 框架已经实现常见的功能,只需要把必须属性通过set注入即可 -->
	<!-- java为了提高效率connection通常采用连接池(C3P0) 取代JdbcUtils -->
	<bean id="ds" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/demo" />
		<property name="user" value="root" />
		<property name="password" value="root" />
	</bean>
	<!-- JdbcTemplate是spring提供访问数据的解决方案,因此它必须依赖dataSouce
	    BaseDaoImpl 依赖 JdbcUtils
	    JdbcTemplate 依赖 DataSource
	     ProductDaoImpl 依赖 jdbcTemplate
	 -->
	<bean id="jt" class="org.springframework.jdbc.core.JdbcTemplate">
		<!-- dataSource 对应是源码的setDataSouce方法, ref="ds" 对应的是上面的id -->
		<property name="dataSource" ref="ds" />
	</bean>
	<!-- 如果在junit中测试jdbc操作成功则说明当前配置都是有效 -->
	<!-- IOC中如果想灵活更改配置,应该遵循面向接口编程 -->
	<bean id="pd" class="cn.dw.oa.dao.ProductDaoImpl">
	    <!-- name="jdbcTemplate" 代码中setJdbcTemplate -->
		<property name="jdbcTemplate" ref="jt" />
	</bean>
	
</beans>





